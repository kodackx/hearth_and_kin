"""fixed gen_ai columns in message and story models

Revision ID: ac736ded48bc
Revises: 
Create Date: 2024-07-06 20:04:12.484036

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.engine.reflection import Inspector


# revision identifiers, used by Alembic.
revision: str = 'ac736ded48bc'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # Get the current connection
    conn = op.get_bind()
    inspector = Inspector.from_engine(conn)

    # Check if columns already exist
    columns = [col['name'] for col in inspector.get_columns('message')]

    if 'genai_text_model' not in columns:
        op.add_column('message', sa.Column('genai_text_model', sa.Enum('nvidia', 'gpt', 'none', name='textmodel'), nullable=True))
    if 'genai_audio_model' not in columns:
        op.add_column('message', sa.Column('genai_audio_model', sa.Enum('elevenlabs', 'none', name='audiomodel'), nullable=True))
    if 'genai_image_model' not in columns:
        op.add_column('message', sa.Column('genai_image_model', sa.Enum('dalle3', 'none', name='imagemodel'), nullable=True))

    # Use batch mode for creating foreign key
    with op.batch_alter_table('invite') as batch_op:
        batch_op.create_foreign_key('fk_invite_story', 'story', ['story_id'], ['story_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('invite') as batch_op:
        batch_op.drop_constraint('fk_invite_story', type_='foreignkey')
    
    op.drop_column('message', 'genai_image_model')
    op.drop_column('message', 'genai_audio_model')
    op.drop_column('message', 'genai_text_model')
    # ### end Alembic commands ###